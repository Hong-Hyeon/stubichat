services:
  # PostgreSQL Database (Main)
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=stubichat
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    ports:
      - "15432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - stubichat_network
    restart: unless-stopped
    container_name: stubichat-postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d stubichat"]
      interval: 10s
      timeout: 5s
      retries: 5

  # PostgreSQL Database (Embedding)
  embedding_postgres:
    build:
      context: ./system-docker/embedding-postgres
    environment:
      - POSTGRES_DB=embeddings
      - POSTGRES_USER=embedding_user
      - POSTGRES_PASSWORD=embedding_password
    ports:
      - "25432:5432"
    volumes:
      - embedding_postgres_data:/var/lib/postgresql/data
    networks:
      - stubichat_network
    restart: unless-stopped
    container_name: stubichat-embedding-postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U embedding_user -d embeddings"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis (for Celery and caching)
  redis:
    image: redis:7-alpine
    ports:
      - "6380:6379"
    volumes:
      - redis_data:/data
    networks:
      - stubichat_network
    restart: unless-stopped
    container_name: stubichat-redis
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Frontend Service (Next.js)
  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_BACKEND_API_URL=http://localhost:8000
      - NEXTAUTH_SECRET=your-secret-key-change-in-production
      - NEXTAUTH_URL=http://localhost:3000
      - NEXTAUTH_TRUSTED_HOSTS=localhost,127.0.0.1,0.0.0.0
      - POSTGRES_URL=postgresql://postgres:password@postgres:5432/stubichat
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/stubichat
    networks:
      - stubichat_network
    restart: unless-stopped
    container_name: stubichat-frontend
    depends_on:
      postgres:
        condition: service_healthy
      main-backend:
        condition: service_healthy

  # Main Backend Service (FastAPI + LangGraph)
  main-backend:
    build:
      context: ./main-backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./main-backend/app:/app/app
      - ./logs:/app/logs
    environment:
      - PYTHONPATH=/app
      - LLM_AGENT_URL=http://llm-agent:8001
      - MCP_SERVER_URL=http://mcp-server:8002
      - DEBUG=true
    networks:
      - stubichat_network
    restart: unless-stopped
    container_name: stubichat-main-backend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    depends_on:
      llm-agent:
        condition: service_healthy

  # LLM Agent Service (OpenAI-based)
  llm-agent:
    build:
      context: ./llm-agent
      dockerfile: Dockerfile
    ports:
      - "8001:8001"
    volumes:
      - ./llm-agent/app:/app/app
      - ./logs:/app/logs
    environment:
      - PYTHONPATH=/app
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_BASE_URL=${OPENAI_BASE_URL:-}
      - DEBUG=true
    networks:
      - stubichat_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    container_name: stubichat-llm-agent
  # MCP Server Service (FastAPI-MCP)
  mcp-server:
    build:
      context: ./mcp-server
      dockerfile: Dockerfile
    ports:
      - "8002:8002"
    volumes:
      - ./mcp-server/app:/app/app
      - ./logs:/app/logs
    environment:
      - PYTHONPATH=/app
      - DEBUG=true
    networks:
      - stubichat_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8002/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    container_name: stubichat-mcp-server

  # Embedding Server Service
  embedding-server:
    build:
      context: ./embedding-server
      dockerfile: Dockerfile
    ports:
      - "8003:8003"
    volumes:
      - ./embedding-server/app:/app/app
      - ./data:/app/data
      - ./logs:/app/logs
    environment:
      - PYTHONPATH=/app
      - EMBEDDING_DATABASE_URL=postgresql://embedding_user:embedding_password@embedding_postgres:5432/embeddings
      - REDIS_URL=redis://redis:6379/1
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_BASE_URL=${OPENAI_BASE_URL:-}
      - DEBUG=true
    networks:
      - stubichat_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8003/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    container_name: stubichat-embedding-server
    depends_on:
      embedding_postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
  # Nginx Reverse Proxy (optional)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
    networks:
      - stubichat_network
    restart: unless-stopped
    depends_on:
      - frontend
      - main-backend
      - llm-agent
    container_name: stubichat-nginx
networks:
  stubichat_network:
    driver: bridge

volumes:
  postgres_data:
  embedding_postgres_data:
  redis_data: 